package com.ey.advisory.app.data.daos.client;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;

import com.ey.advisory.app.docs.dto.anx1.Gstr2aProcessedDataRecordsRespDto;
import com.ey.advisory.common.AppException;
import com.ey.advisory.core.dto.Gstr2aProcessedDataRecordsReqDto;
import com.ey.advisory.gstnapi.services.DefaultGSTNAuthTokenService;

import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;

/**
 * 
 * @author Anand3.M
 *
 */
@Component("Gstr2aProcessedDataRecordsFetchDaoImpl")
public class Gstr2aProcessedDataRecordsFetchDaoImpl
		implements Gstr2aProcessedDataRecordsFetchDao {

	private static final Logger LOGGER = LoggerFactory
			.getLogger(Gstr2aProcessedDataRecordsFetchDaoImpl.class);
	@PersistenceContext(unitName = "clientDataUnit")
	private EntityManager entityManager;

	@Autowired
	private Gstr2aProcessedDataRecordsCommonUtil gstr2aPRCommonUtil;

	@Autowired
	@Qualifier("DefaultGSTNAuthTokenService")
	private DefaultGSTNAuthTokenService defaultGSTNAuthTokenService;

	public List<Gstr2aProcessedDataRecordsRespDto> loadGstr2aDataProcessedRecords(
			Gstr2aProcessedDataRecordsReqDto gstr2aPRReqDto) {

		String finYear = gstr2aPRReqDto.getFinancialYear();

		Map<String, List<String>> dataSecAttrs = gstr2aPRReqDto
				.getDataSecAttrs();
		List<String> gstinList = new ArrayList<>();

		List<Gstr2aProcessedDataRecordsRespDto> apiSummaryResDtos = new ArrayList<Gstr2aProcessedDataRecordsRespDto>();

		try {

			if (dataSecAttrs != null && !dataSecAttrs.isEmpty()
					&& dataSecAttrs.size() > 0) {
				for (String key : dataSecAttrs.keySet()) {

					if (key.equalsIgnoreCase("GSTIN")) {
						gstinList = dataSecAttrs.get("GSTIN");
					}
				}
			}

			StringBuilder queryStr = createQueryString(gstinList, finYear);

			Query outquery = entityManager
					.createNativeQuery(queryStr.toString());
			if (LOGGER.isDebugEnabled()) {
				LOGGER.debug("outquery --> {}", outquery);
			}

			if (StringUtils.isNotBlank(finYear)) {
				String fin[] = finYear.split("-");
				String finYearStr = fin[0] + fin[1];
				outquery.setParameter("finYear", finYearStr);
			}

			if (CollectionUtils.isNotEmpty(gstinList)) {
				outquery.setParameter("gstinsList", gstinList);
			}

			@SuppressWarnings("unchecked")
			List<Object[]> list = outquery.getResultList();
			List<Gstr2aProcessedDataRecordsRespDto> outwardFinalList = gstr2aPRCommonUtil
					.convertGstr2aRecordsIntoObjesct(list, gstr2aPRReqDto,
							gstinList);

			gstr2aPRCommonUtil.fillTheDataFromDataSecAttr(gstr2aPRReqDto,
					outwardFinalList, gstinList);

			List<Gstr2aProcessedDataRecordsRespDto> sortedGstinDtoList = outwardFinalList
					.stream()
					.sorted(Comparator.comparing(
							Gstr2aProcessedDataRecordsRespDto::getGstin))
					.collect(Collectors.toList());
			apiSummaryResDtos.addAll(sortedGstinDtoList);
			if (LOGGER.isDebugEnabled()) {
				LOGGER.debug("Final list from dao is -> {}", apiSummaryResDtos);
			}
		} catch (Exception e) {
			throw new AppException("Error in data process -> {}", e);
		}

		return apiSummaryResDtos;

	}

	private StringBuilder createQueryString(List<String> gstinList,
			String finYear) {

		StringBuilder queryBuilder = new StringBuilder();

		if (StringUtils.isNotBlank(finYear)) {
			queryBuilder.append(" WHERE FI_YEAR IN (:finYear) ");

		}
		if (CollectionUtils.isNotEmpty(gstinList)) {
			queryBuilder.append(" AND GSTIN IN (:gstinsList)");
		}

		String condition = queryBuilder.toString();
		StringBuilder bufferString = new StringBuilder();
		bufferString
				.append("select GSTIN,FI_YEAR,JAN_STATUS,JAN_LAST_UPDATED, FEB_STATUS, FEB_LAST_UPDATED, MAR_STATUS, "
						+ "MAR_LAST_UPDATED, APR_STATUS, APR_LAST_UPDATED, MAY_STATUS, MAY_LAST_UPDATED, JUN_STATUS, JUN_LAST_UPDATED, "
						+ "JUL_STATUS, JUL_LAST_UPDATED, AUG_STATUS, AUG_LAST_UPDATED, SEP_STATUS, SEP_LAST_UPDATED, OCT_STATUS, "
						+ "OCT_LAST_UPDATED, NOV_STATUS, NOV_LAST_UPDATED, DEC_STATUS, DEC_LAST_UPDATED "
						+ "FROM( select GSTIN,JAN_STATUS,JAN_LAST_UPDATED, FEB_STATUS, FEB_LAST_UPDATED, MAR_STATUS, MAR_LAST_UPDATED, APR_STATUS, "
						+ "APR_LAST_UPDATED, MAY_STATUS, MAY_LAST_UPDATED, JUN_STATUS, JUN_LAST_UPDATED, JUL_STATUS, JUL_LAST_UPDATED, AUG_STATUS, "
						+ "AUG_LAST_UPDATED, SEP_STATUS, SEP_LAST_UPDATED, OCT_STATUS, OCT_LAST_UPDATED, NOV_STATUS, NOV_LAST_UPDATED, DEC_STATUS, "
						+ "DEC_LAST_UPDATED, (case WHEN DERIVED_RET_PERIOD BETWEEN 201604 AND 201703 THEN '201617' "
						+ "WHEN DERIVED_RET_PERIOD BETWEEN 201704 AND 201803 THEN '201718' WHEN DERIVED_RET_PERIOD BETWEEN 201804 AND 201903 "
						+ "THEN '201819' WHEN DERIVED_RET_PERIOD BETWEEN 201904 AND 202003 THEN '201920' WHEN DERIVED_RET_PERIOD BETWEEN 202004 "
						+ "AND 202103 THEN '202021' WHEN DERIVED_RET_PERIOD BETWEEN 202104 AND 202203 THEN '202122' "
						+ "WHEN DERIVED_RET_PERIOD BETWEEN 202204 AND 202303 THEN '202223' "
						+ "WHEN DERIVED_RET_PERIOD BETWEEN 202304 AND 202403 THEN '202324' "
						+ "WHEN DERIVED_RET_PERIOD BETWEEN 202404 AND 202503 THEN '202425' "
						+ "WHEN DERIVED_RET_PERIOD BETWEEN 202504 AND 202603 THEN '202526' "
						+ "WHEN DERIVED_RET_PERIOD BETWEEN 202604 AND 202703 THEN '202627' "
						+ "WHEN DERIVED_RET_PERIOD BETWEEN 202704 AND 202803 THEN '202728' "
						+ "WHEN DERIVED_RET_PERIOD BETWEEN 202804 AND 202903 THEN '202829' "
						+ "WHEN DERIVED_RET_PERIOD BETWEEN 202904 AND 203003 THEN '202930' END) FI_YEAR "
						+ "FROM ( SELECT GSTIN,DERIVED_RET_PERIOD,JAN_STATUS,JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS,"
						+ "'' MAR_LAST_UPDATED,'' APR_STATUS,'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED,'' JUN_STATUS,'' JUN_LAST_UPDATED, "
						+ "'' JUL_STATUS,'' JUL_LAST_UPDATED,'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS,'' SEP_LAST_UPDATED,'' OCT_STATUS,"
						+ "'' OCT_LAST_UPDATED, '' NOV_STATUS,'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED "
						+ "FROM ( SELECT GSTIN, JAN_STATUS, JAN_LAST_UPDATED,DERIVED_RET_PERIOD, MONTH_RET_PERIOD "
						+ "FROM ( SELECT GSTIN,JAN_STATUS,JAN_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "(CASE WHEN MONTH_RET_PERIOD='01' THEN 'January' END) MONTH_RET_PERIOD "
						+ "FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as JAN_STATUS,CREATED_ON as JAN_LAST_UPDATED ,"
						+ "ROW_NUMBER() OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,JAN_STATUS,JAN_LAST_UPDATED) WHERE MONTH_RET_PERIOD='January' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,JAN_STATUS, JAN_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED, FEB_STATUS, FEB_LAST_UPDATED, '' MAR_STATUS,'' MAR_LAST_UPDATED,'' APR_STATUS,"
						+ "'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED,'' JUN_STATUS,'' JUN_LAST_UPDATED, '' JUL_STATUS,'' JUL_LAST_UPDATED,"
						+ "'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS,'' SEP_LAST_UPDATED,'' OCT_STATUS,'' OCT_LAST_UPDATED, '' NOV_STATUS,"
						+ "'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED "
						+ "FROM ( SELECT GSTIN, FEB_STATUS, FEB_LAST_UPDATED,DERIVED_RET_PERIOD, MONTH_RET_PERIOD "
						+ "FROM ( SELECT GSTIN,FEB_STATUS,FEB_LAST_UPDATED,DERIVED_RET_PERIOD, (CASE WHEN MONTH_RET_PERIOD='02' THEN 'February' END) "
						+ "MONTH_RET_PERIOD FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as FEB_STATUS,CREATED_ON as FEB_LAST_UPDATED ,"
						+ "ROW_NUMBER() OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,FEB_STATUS,FEB_LAST_UPDATED) WHERE MONTH_RET_PERIOD='February' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,FEB_STATUS, FEB_LAST_UPDATED) "
						+ "UNION ALL "
						+ "SELECT GSTIN,DERIVED_RET_PERIOD,'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, MAR_STATUS, MAR_LAST_UPDATED,"
						+ "'' APR_STATUS,'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED,'' JUN_STATUS,'' JUN_LAST_UPDATED, '' JUL_STATUS,"
						+ "'' JUL_LAST_UPDATED,'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS,'' SEP_LAST_UPDATED,'' OCT_STATUS,'' OCT_LAST_UPDATED, "
						+ "'' NOV_STATUS,'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED FROM ( SELECT GSTIN, MAR_STATUS, MAR_LAST_UPDATED,"
						+ "DERIVED_RET_PERIOD, MONTH_RET_PERIOD FROM ( SELECT GSTIN,MAR_STATUS,MAR_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "(CASE WHEN MONTH_RET_PERIOD='03' THEN 'March' END) MONTH_RET_PERIOD FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, "
						+ "GET_TYPE,STATUS as MAR_STATUS,CREATED_ON as MAR_LAST_UPDATED ,ROW_NUMBER() OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS "
						+ "ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,MAR_STATUS,MAR_LAST_UPDATED) WHERE MONTH_RET_PERIOD='March' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,MAR_STATUS, MAR_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS, '' MAR_LAST_UPDATED, APR_STATUS, "
						+ "APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED,'' JUN_STATUS,'' JUN_LAST_UPDATED, '' JUL_STATUS,'' JUL_LAST_UPDATED,"
						+ "'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS,'' SEP_LAST_UPDATED,'' OCT_STATUS,'' OCT_LAST_UPDATED, '' NOV_STATUS,"
						+ "'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED FROM ( SELECT GSTIN, APR_STATUS, APR_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "MONTH_RET_PERIOD FROM ( SELECT GSTIN,APR_STATUS,APR_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "(CASE WHEN MONTH_RET_PERIOD='04' THEN 'April' END) MONTH_RET_PERIOD "
						+ "FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as APR_STATUS,CREATED_ON as APR_LAST_UPDATED ,ROW_NUMBER() "
						+ "OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,APR_STATUS,APR_LAST_UPDATED) WHERE MONTH_RET_PERIOD='April' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,APR_STATUS, APR_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS, '' MAR_LAST_UPDATED, '' APR_STATUS,"
						+ "'' APR_LAST_UPDATED, MAY_STATUS, MAY_LAST_UPDATED,'' JUN_STATUS,'' JUN_LAST_UPDATED, '' JUL_STATUS,'' JUL_LAST_UPDATED,"
						+ "'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS,'' SEP_LAST_UPDATED,'' OCT_STATUS,'' OCT_LAST_UPDATED, '' NOV_STATUS,"
						+ "'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED FROM ( SELECT GSTIN, MAY_STATUS, MAY_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "MONTH_RET_PERIOD FROM ( SELECT GSTIN,MAY_STATUS,MAY_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "(CASE WHEN MONTH_RET_PERIOD='05' THEN 'May' END) MONTH_RET_PERIOD "
						+ "FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as MAY_STATUS,CREATED_ON as MAY_LAST_UPDATED ,ROW_NUMBER() "
						+ "OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,MAY_STATUS,MAY_LAST_UPDATED) WHERE MONTH_RET_PERIOD='May' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,MAY_STATUS, MAY_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS, '' MAR_LAST_UPDATED, '' APR_STATUS,"
						+ "'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED, JUN_STATUS, JUN_LAST_UPDATED, '' JUL_STATUS,'' JUL_LAST_UPDATED,"
						+ "'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS,'' SEP_LAST_UPDATED,'' OCT_STATUS,'' OCT_LAST_UPDATED, '' NOV_STATUS,"
						+ "'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED FROM ( SELECT GSTIN, JUN_STATUS, JUN_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "MONTH_RET_PERIOD FROM ( SELECT GSTIN,JUN_STATUS,JUN_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "(CASE WHEN MONTH_RET_PERIOD='06' THEN 'June' END) MONTH_RET_PERIOD "
						+ "FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as JUN_STATUS,CREATED_ON as JUN_LAST_UPDATED ,"
						+ "ROW_NUMBER() OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,JUN_STATUS,JUN_LAST_UPDATED) WHERE MONTH_RET_PERIOD='June' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,JUN_STATUS, JUN_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS, '' MAR_LAST_UPDATED, '' APR_STATUS,"
						+ "'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED, '' JUN_STATUS, '' JUN_LAST_UPDATED, JUL_STATUS, JUL_LAST_UPDATED,"
						+ "'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS,'' SEP_LAST_UPDATED,'' OCT_STATUS,'' OCT_LAST_UPDATED, '' NOV_STATUS,"
						+ "'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED FROM ( SELECT GSTIN, JUL_STATUS, JUL_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "MONTH_RET_PERIOD FROM ( SELECT GSTIN,JUL_STATUS,JUL_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "(CASE WHEN MONTH_RET_PERIOD='07' THEN 'July' END) MONTH_RET_PERIOD "
						+ "FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as JUL_STATUS,CREATED_ON as JUL_LAST_UPDATED ,ROW_NUMBER() "
						+ "OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,JUL_STATUS,JUL_LAST_UPDATED) WHERE MONTH_RET_PERIOD='July' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,JUL_STATUS, JUL_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS, '' MAR_LAST_UPDATED, '' APR_STATUS,"
						+ "'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED, '' JUN_STATUS, '' JUN_LAST_UPDATED, '' JUL_STATUS, "
						+ "'' JUL_LAST_UPDATED, AUG_STATUS, AUG_LAST_UPDATED, '' SEP_STATUS,'' SEP_LAST_UPDATED,'' OCT_STATUS,'' OCT_LAST_UPDATED, "
						+ "'' NOV_STATUS,'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED "
						+ "FROM ( SELECT GSTIN, AUG_STATUS, AUG_LAST_UPDATED,DERIVED_RET_PERIOD, MONTH_RET_PERIOD "
						+ "FROM ( SELECT GSTIN,AUG_STATUS,AUG_LAST_UPDATED,DERIVED_RET_PERIOD, (CASE WHEN MONTH_RET_PERIOD='08' THEN 'August' END) "
						+ "MONTH_RET_PERIOD "
						+ "FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as AUG_STATUS,CREATED_ON as AUG_LAST_UPDATED ,ROW_NUMBER() "
						+ "OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,AUG_STATUS,AUG_LAST_UPDATED) WHERE MONTH_RET_PERIOD='August' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,AUG_STATUS, AUG_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS, '' MAR_LAST_UPDATED, '' APR_STATUS,"
						+ "'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED, '' JUN_STATUS, '' JUN_LAST_UPDATED, '' JUL_STATUS, '' JUL_LAST_UPDATED, "
						+ "'' AUG_STATUS,'' AUG_LAST_UPDATED, SEP_STATUS, SEP_LAST_UPDATED,'' OCT_STATUS,'' OCT_LAST_UPDATED, '' NOV_STATUS,"
						+ "'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED "
						+ "FROM ( SELECT GSTIN, SEP_STATUS, SEP_LAST_UPDATED,DERIVED_RET_PERIOD, MONTH_RET_PERIOD "
						+ "FROM ( SELECT GSTIN,SEP_STATUS,SEP_LAST_UPDATED,DERIVED_RET_PERIOD, (CASE WHEN MONTH_RET_PERIOD='09' THEN 'September' END) "
						+ "MONTH_RET_PERIOD FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as SEP_STATUS,"
						+ "CREATED_ON as SEP_LAST_UPDATED ,ROW_NUMBER() OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, "
						+ "SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,SEP_STATUS,SEP_LAST_UPDATED) WHERE MONTH_RET_PERIOD='September' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,SEP_STATUS, SEP_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS, '' MAR_LAST_UPDATED, '' APR_STATUS,"
						+ "'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED, '' JUN_STATUS, '' JUN_LAST_UPDATED, '' JUL_STATUS, '' JUL_LAST_UPDATED, "
						+ "'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS, '' SEP_LAST_UPDATED, OCT_STATUS, OCT_LAST_UPDATED, '' NOV_STATUS,"
						+ "'' NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED FROM ( SELECT GSTIN, OCT_STATUS, OCT_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "MONTH_RET_PERIOD FROM ( SELECT GSTIN,OCT_STATUS,OCT_LAST_UPDATED,DERIVED_RET_PERIOD, (CASE WHEN MONTH_RET_PERIOD='10' THEN 'October' "
						+ "END) MONTH_RET_PERIOD "
						+ "FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as OCT_STATUS,CREATED_ON as OCT_LAST_UPDATED ,ROW_NUMBER() "
						+ "OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,OCT_STATUS,OCT_LAST_UPDATED) WHERE MONTH_RET_PERIOD='October' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,OCT_STATUS, OCT_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS, '' MAR_LAST_UPDATED, '' APR_STATUS,"
						+ "'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED, '' JUN_STATUS, '' JUN_LAST_UPDATED, '' JUL_STATUS, '' JUL_LAST_UPDATED, "
						+ "'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS, '' SEP_LAST_UPDATED,'' OCT_STATUS, '' OCT_LAST_UPDATED, NOV_STATUS, "
						+ "NOV_LAST_UPDATED,'' DEC_STATUS,'' DEC_LAST_UPDATED FROM ( SELECT GSTIN, NOV_STATUS, NOV_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "MONTH_RET_PERIOD FROM ( SELECT GSTIN,NOV_STATUS,NOV_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "(CASE WHEN MONTH_RET_PERIOD='11' THEN 'November' END) MONTH_RET_PERIOD "
						+ "FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as NOV_STATUS,CREATED_ON as NOV_LAST_UPDATED ,ROW_NUMBER() "
						+ "OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) MONTH_RET_PERIOD "
						+ "FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,NOV_STATUS,NOV_LAST_UPDATED) WHERE MONTH_RET_PERIOD='November' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,NOV_STATUS, NOV_LAST_UPDATED) UNION ALL SELECT GSTIN,DERIVED_RET_PERIOD,"
						+ "'' JAN_STATUS,'' JAN_LAST_UPDATED,'' FEB_STATUS,'' FEB_LAST_UPDATED, '' MAR_STATUS, '' MAR_LAST_UPDATED, '' APR_STATUS,"
						+ "'' APR_LAST_UPDATED, '' MAY_STATUS,'' MAY_LAST_UPDATED, '' JUN_STATUS, '' JUN_LAST_UPDATED, '' JUL_STATUS, '' JUL_LAST_UPDATED, "
						+ "'' AUG_STATUS,'' AUG_LAST_UPDATED, '' SEP_STATUS, '' SEP_LAST_UPDATED,'' OCT_STATUS, '' OCT_LAST_UPDATED, '' NOV_STATUS,"
						+ "'' NOV_LAST_UPDATED, DEC_STATUS, DEC_LAST_UPDATED FROM ( SELECT GSTIN, DEC_STATUS, DEC_LAST_UPDATED,DERIVED_RET_PERIOD, "
						+ "MONTH_RET_PERIOD FROM ( SELECT GSTIN,DEC_STATUS,DEC_LAST_UPDATED,DERIVED_RET_PERIOD, (CASE WHEN MONTH_RET_PERIOD='12' THEN "
						+ "'December' END) MONTH_RET_PERIOD FROM (SELECT GSTIN , RETURN_PERIOD,DERIVED_RET_PERIOD, GET_TYPE,STATUS as DEC_STATUS,CREATED_ON as "
						+ "DEC_LAST_UPDATED ,ROW_NUMBER() OVER(PARTITION BY GET_TYPE ORDER BY CREATED_ON DESC) AS ROWNUM_DT, SUBSTRING(RETURN_PERIOD,1,2) "
						+ "MONTH_RET_PERIOD FROM GETANX1_BATCH_TABLE WHERE IS_DELETE=FALSE AND API_SECTION='GSTR2A' "
						+ "AND GET_TYPE IN ('B2B','B2BA','CDN','CDNA','ISD','IMPG','IMPGSEZ') ) BT "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,DEC_STATUS,DEC_LAST_UPDATED) WHERE MONTH_RET_PERIOD='December' "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD,MONTH_RET_PERIOD,DEC_STATUS, DEC_LAST_UPDATED) ) "
						+ "GROUP BY GSTIN,DERIVED_RET_PERIOD, JAN_STATUS, JAN_LAST_UPDATED, FEB_STATUS, FEB_LAST_UPDATED, MAR_STATUS, MAR_LAST_UPDATED, "
						+ "APR_STATUS, APR_LAST_UPDATED, MAY_STATUS, MAY_LAST_UPDATED, JUN_STATUS, JUN_LAST_UPDATED, JUL_STATUS, JUL_LAST_UPDATED, "
						+ "AUG_STATUS, AUG_LAST_UPDATED, SEP_STATUS, SEP_LAST_UPDATED, OCT_STATUS, OCT_LAST_UPDATED, NOV_STATUS, NOV_LAST_UPDATED, "
						+ "DEC_STATUS, DEC_LAST_UPDATED ) ");

		if (StringUtils.isNotBlank(condition)) {
			bufferString.append(condition);
		}

		return bufferString;
	}

}
