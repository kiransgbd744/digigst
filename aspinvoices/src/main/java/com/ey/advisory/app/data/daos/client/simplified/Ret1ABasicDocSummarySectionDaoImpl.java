package com.ey.advisory.app.data.daos.client.simplified;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;

import com.ey.advisory.app.docs.dto.Ret1SummarySectionDto;
import com.ey.advisory.app.util.OnboardingConstant;
import com.ey.advisory.common.AppException;
import com.ey.advisory.common.BasicCommonSecParam;
import com.ey.advisory.common.GenUtil;
import com.ey.advisory.core.dto.Annexure1SummaryReqDto;

import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;
import lombok.extern.slf4j.Slf4j;

/**
 * 
 * @author Balakrishna.S
 *
 */
@Slf4j
@Component("Ret1ABasicDocSummarySectionDaoImpl")
public class Ret1ABasicDocSummarySectionDaoImpl
/* implements Ret1BasicDocSummarySectionDao */ {

	@PersistenceContext(unitName = "clientDataUnit")
	private EntityManager entityManager;

	@Autowired
	@Qualifier("BasicCommonSecParam")
	BasicCommonSecParam basicCommonSecParam;

	// @Override
	public List<Ret1SummarySectionDto> loadBasicSummarySection(
			Annexure1SummaryReqDto request) {

		Annexure1SummaryReqDto req = basicCommonSecParam
				.setOutwardSumDataSecuritySearchParams(request);

		String taxPeriodReq = req.getTaxPeriod();

		int taxPeriod = GenUtil.convertTaxPeriodToInt(taxPeriodReq);

		Map<String, List<String>> dataSecAttrs = req.getDataSecAttrs();

		String gstin = null;
		List<String> gstinList = null;
		if (!dataSecAttrs.isEmpty()) {
			for (String key : dataSecAttrs.keySet()) {

				if (key.equalsIgnoreCase(OnboardingConstant.GSTIN)) {
					gstin = key;
					if (!dataSecAttrs.get(OnboardingConstant.GSTIN).isEmpty()
							&& dataSecAttrs.get(OnboardingConstant.GSTIN)
									.size() > 0) {
						gstinList = dataSecAttrs.get(OnboardingConstant.GSTIN);
					}
				}

			}
		}

		StringBuilder build = new StringBuilder();
		StringBuilder build1 = new StringBuilder();
		StringBuilder build2 = new StringBuilder();

		if (gstin != null && !gstin.isEmpty()) {
			if (gstinList != null && gstinList.size() > 0) {
				build.append(" AND SUPPLIER_GSTIN IN :gstinList");
				build1.append(" AND GSTIN IN :gstinList");
				build2.append(" AND CUST_GSTIN IN :gstinList");

			}
		}
		if (taxPeriod != 0) {

			build.append(" AND DERIVED_RET_PERIOD = :taxPeriod ");
			build1.append(" AND DERIVED_RET_PERIOD = :taxPeriod ");
			build2.append(" AND DERIVED_RET_PERIOD = :taxPeriod ");
		}

		String buildQuery = build.toString();
		String buildQuery1 = build1.toString();
		String buildQuery2 = build2.toString();
		LOGGER.debug(
				"Prepared where Condition and apply in Outward Query BEGIN");

		String queryStr = createQueryString(buildQuery, buildQuery1,
				buildQuery2);

		LOGGER.debug("Outward Query BEGIN----> 3A To 3G " + queryStr);

		try {
			Query q = entityManager.createNativeQuery(queryStr);

			
			if (gstin != null && !gstin.isEmpty()) {
				if (gstinList != null && !gstinList.isEmpty()
						&& gstinList.size() > 0) {
					q.setParameter("gstinList", gstinList);
				}
			}
			 if (taxPeriod != 0) {
				q.setParameter("taxPeriod", taxPeriod);
			}

			List<Object[]> list = q.getResultList();
			LOGGER.debug("ResultList data Converting to Dto");
			List<Ret1SummarySectionDto> retList = list.parallelStream()
					.map(o -> convert(o))
					.collect(Collectors.toCollection(ArrayList::new));

			return retList;
		} catch (Exception e) {
			e.printStackTrace();
			throw new AppException("Unexpected error in query execution.",e);
		}
	}

	private Ret1SummarySectionDto convert(Object[] arr) {
		Ret1SummarySectionDto obj = new Ret1SummarySectionDto();
		LOGGER.debug("Array data Setting to Dto");

		obj.setTable((String) arr[0]);
		obj.setSupplyType((String) arr[1]);
		obj.setTaxableValue((BigDecimal) arr[2]);
		obj.setAspIgst((BigDecimal) arr[3]);
		obj.setAspCgst((BigDecimal) arr[4]);
		obj.setAspSgst((BigDecimal) arr[5]);
		obj.setAspCess((BigDecimal) arr[6]);
		obj.setUsrValue((BigDecimal) arr[7]);
		obj.setUsrIgst((BigDecimal) arr[8]);
		obj.setUsrCgst((BigDecimal) arr[9]);
		obj.setUsrSgst((BigDecimal) arr[10]);
		obj.setUsrCess((BigDecimal) arr[11]);
		obj.setGstnValue((BigDecimal) arr[12]);
		obj.setGstnIgst((BigDecimal) arr[13]);
		obj.setGstnCgst((BigDecimal) arr[14]);
		obj.setGstnSgst((BigDecimal) arr[15]);
		obj.setGstnCess((BigDecimal) arr[16]);
		return obj;
	}

	private String createQueryString(String buildQuery, String buildQuery1,
			String buildQuery2) {
		LOGGER.debug("Outward 3A TO 4B Query Execution BEGIN ");

		String queryString = "SELECT TABLE,TYPE_OF_SUPPLY,"
				+ "SUM(ASP_TAXABLE_VALUE) ASP_TAXABLE_VALUE,"
				+ "SUM(ASP_IGST_AMT) AS ASP_IGST_AMT,"
				+ "SUM(ASP_CGST_AMT) ASP_CGST_AMT,"
				+ "SUM(ASP_SGST_AMT) ASP_SGST_AMT,"
				+ "SUM(ASP_CESS_AMT) ASP_CESS_AMT,"
				+ "SUM(ASPUI_TAXABLE_VALUE) ASPUI_TAXABLE_VALUE,"
				+ "SUM(ASPUI_IGST_AMT) AS ASPUI_IGST_AMT,"
				+ "SUM(ASPUI_CGST_AMT) ASPUI_CGST_AMT,"
				+ "SUM(ASPUI_SGST_AMT) ASPUI_SGST_AMT,"
				+ "SUM(ASPUI_CESS_AMT) ASPUI_CESS_AMT,"
				+ "SUM(GSTN_TAXABLE_VALUE) GSTN_TAXABLE_VALUE,"
				+ "SUM(GSTN_IGST_AMT) GSTN_IGST_AMT,"
				+ "SUM(GSTN_CGST_AMT) GSTN_CGST_AMT,"
				+ "SUM(GSTN_SGST_AMT) GSTN_SGST_AMT,"
				+ "SUM(GSTN_CESS_AMT) GSTN_CESS_AMT "
				+ "FROM ( "
				+ "SELECT TABLE,TYPE_OF_SUPPLY,ASP_TAXABLE_VALUE,"
				+ "ASP_IGST_AMT,ASP_CGST_AMT,ASP_SGST_AMT,ASP_CESS_AMT,"
				+ "ASPUI_TAXABLE_VALUE, ASPUI_IGST_AMT,ASPUI_CGST_AMT,"
				+ "ASPUI_SGST_AMT,ASPUI_CESS_AMT,0 AS GSTN_TAXABLE_VALUE,"
				+ "0 AS GSTN_IGST_AMT,0 AS GSTN_CGST_AMT,0 AS GSTN_SGST_AMT,"
				+ "0 AS GSTN_CESS_AMT FROM( "
				+ "SELECT 'A3' AS TABLE,'a_outwardsupplies' AS TYPE_OF_SUPPLY, "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IGST_AMT END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN CGST_AMT END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN CGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN SGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN SGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)+"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0)-"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,"
				+ "0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_OUTWARD_DOC_HEADER "
				+ "WHERE IS_PROCESSED = TRUE AND IS_DELETE = FALSE "
				+ "AND AN_RETURN_TYPE IN ('ANX1A','RET1A') "
				+ "AND AN_TABLE_SECTION IN ('3A','3C','3D') "
				+ buildQuery
				+ "UNION ALL "
				+ "SELECT 'A3' AS TABLE,'a_outwardsupplies' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT, "
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM  ANX_PROCESSED_B2C WHERE IS_DELETE = FALSE AND "
				+ "RETURN_TYPE IN ('ANX-1A') "
				+ buildQuery 
				+ "UNION ALL "
				+ "SELECT 'A3' AS TABLE,'a_outwardsupplies' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,0 AS ASP_CGST_AMT,"
				+ "0 AS ASP_SGST_AMT, 0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASPUI_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASPUI_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASPUI_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASPUI_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASPUI_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE='RET-1A' AND RETURN_TABLE IN ('3A4') "
				+ "UNION ALL"
				+ buildQuery1 
				+ "SELECT AN_TABLE_SECTION AS TABLE,(case "
				+ "WHEN AN_TABLE_SECTION='3A' THEN 'a_b2c' "
				+ "WHEN AN_TABLE_SECTION='3C' THEN 'a_expwt' "
				+ "WHEN AN_TABLE_SECTION='3D' THEN 'a_expwot' END ) "
				+ "AS TYPE_OF_SUPPLY,IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' "
				+ "THEN TAXABLE_VALUE END),0) +  IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' "
				+ "THEN TAXABLE_VALUE END),0)- IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' "
				+ "THEN TAXABLE_VALUE END),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN CGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN CGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN SGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN SGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)+"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)-"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0) "
				+ "AS ASP_CESS_AMT,0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_OUTWARD_DOC_HEADER "
				+ "WHERE IS_PROCESSED = TRUE AND IS_DELETE = FALSE "
				+ "AND AN_RETURN_TYPE IN ('ANX1A') AND "
				+ "AN_TABLE_SECTION IN ('3A','3C','3D') "
				+ buildQuery
				+ "GROUP BY AN_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT '3A' AS TABLE, 'a_b2c' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_PROCESSED_B2C WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE IN ('ANX-1A') "
				+ "UNION ALL "
				+ "SELECT 'B3' AS TABLE, 'a_inwardSupplies' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN CGST_AMT END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN CGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN SGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN SGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)+"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)-"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_INWARD_DOC_HEADER "
				+ "WHERE IS_PROCESSED = TRUE AND IS_DELETE = FALSE AND "
				+ "AN_RETURN_TYPE IN ('ANX1A') "
				+ "AND AN_TABLE_SECTION IN ('3H','3I') "
				+ buildQuery2
				+ "UNION ALL "
				+ "SELECT 'B3' AS TABLE, 'a_inwardSupplies' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT, "
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,"
				+ "0 AS ASPUI_CESS_AMT "
				+ "FROM  ANX_PROCESSED_3H_3I "
				+ "WHERE IS_DELETE = FALSE AND RETURN_TYPE IN ('ANX-1A') "
				+ "AND TRAN_FLAG IN ('RC','IMPS') "
				+ buildQuery2
				+ "UNION ALL "
				+ "SELECT AN_TABLE_SECTION AS TABLE,(case "
				+ "WHEN AN_TABLE_SECTION='3H' THEN 'a_rcInward' "
				+ "WHEN AN_TABLE_SECTION='3I' THEN 'a_imps' "
				+ "END ) AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN CGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN CGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN SGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN SGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)+"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0)-"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,0 AS ASPUI_CGST_AMT,"
				+ "0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_INWARD_DOC_HEADER WHERE IS_PROCESSED = TRUE "
				+ "AND IS_DELETE = FALSE AND AN_RETURN_TYPE IN ('ANX1A') "
				+ "AND AN_TABLE_SECTION IN ('3H','3I') "
				+ buildQuery2
				+ "GROUP BY AN_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT (case WHEN TRAN_FLAG='RC' THEN '3H' "
				+ "WHEN TRAN_FLAG='IMPS' THEN '3I' END )  AS TABLE,(case "
				+ "WHEN TRAN_FLAG='RC' THEN 'rcInward' "
				+ "WHEN TRAN_FLAG='IMPS' THEN 'imps' END ) AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_PROCESSED_3H_3I WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE IN ('ANX-1A') "
				+ buildQuery2
				+ "GROUP BY  TRAN_FLAG "
				+ "UNION ALL "
				+ "SELECT AN_TABLE_SECTION AS TABLE,(case "
				+ "WHEN AN_TABLE_SECTION='3H' THEN 'a_4rcInward' "
				+ "WHEN AN_TABLE_SECTION='3I' THEN 'a_4imps' "
				+ "WHEN AN_TABLE_SECTION='3J' THEN 'a_impg' "
				+ "WHEN AN_TABLE_SECTION='3K' THEN 'a_impgSez' "
				+ "END ) AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN CGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN CGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN SGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN SGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)+"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0)-"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0) "
				+ "AS ASP_CESS_AMT,0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_INWARD_DOC_HEADER WHERE IS_PROCESSED = TRUE "
				+ "AND IS_DELETE = FALSE AND AN_RETURN_TYPE IN ('ANX1A') "
				+ "AND AN_TABLE_SECTION IN ('3H','3I','3J','3K') "
				+ buildQuery2
				+ "GROUP BY AN_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT (case WHEN TRAN_FLAG='RC' THEN '3H' "
				+ "WHEN TRAN_FLAG='IMPS' THEN '3I' END )  AS TABLE,(case "
				+ "WHEN TRAN_FLAG='RC' THEN '4rcInward' "
				+ "WHEN TRAN_FLAG='IMPS' THEN '4imps' "
				+ "END ) AS TYPE_OF_SUPPLY,I"
				+ "FNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT, "
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_PROCESSED_3H_3I WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE IN ('ANX-1A') "
				+ buildQuery2
				+ "GROUP BY  TRAN_FLAG "
				+ "UNION ALL "
				+ "SELECT 'C3' AS TABLE, 'a_drCrNotes' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,0 AS ASP_CGST_AMT,"
				+ "0 AS ASP_SGST_AMT, AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE='RET-1A' AND RETURN_TABLE='3C1' "
				+ "GROUP BY RETURN_TABLE "
				+ buildQuery1
				+ "UNION ALL "
				+ "SELECT RETURN_TABLE AS TABLE,"
				+ "(case WHEN RETURN_TABLE='3A4' THEN 'a_priorPeriod' "
				+ "WHEN RETURN_TABLE='3C1' THEN 'a_otherReduction' "
				+ "WHEN RETURN_TABLE='4A5' THEN 'a_adjustments' "
				+ "WHEN RETURN_TABLE='4B1' THEN 'a_ineligibleCredit' "
				+ "WHEN RETURN_TABLE='4B2' THEN 'a_itcReversal' END ) "
				+ "AS TYPE_OF_SUPPLY,0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,"
				+ "0 AS ASP_CGST_AMT,0 AS ASP_SGST_AMT,0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT "
				+ "WHERE IS_DELETE = FALSE AND RETURN_TYPE='RET-1A' "
				+ "AND RETURN_TABLE IN ('3A4','3C1','4A5','4B1','4B2') "
				+ buildQuery1
				+ "GROUP BY RETURN_TABLE "
				+ "UNION ALL "
				+ "(SELECT 'D3' AS TABLE,'a_suppliesNoLiability' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,'0' AS ASP_IGST_AMT,"
				+ "'0' AS ASP_CGST_AMT,'0' AS ASP_SGST_AMT,'0' AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,"
				+ "0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_OUTWARD_DOC_HEADER WHERE IS_PROCESSED = TRUE "
				+ "AND IS_DELETE = FALSE AND AN_RETURN_TYPE IN ('ANX1A') "
				+ "AND AN_TABLE_SECTION IN ('3D1','3D2','3D3','3D4') "
				+ "union all "
				+ "SELECT 'D3' AS TABLE,"
				+ "'a_suppliesNoLiability' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,'0' AS ASP_IGST_AMT,'0' AS ASP_CGST_AMT,"
				+ "'0' AS ASP_SGST_AMT,'0' AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,0 AS ASPUI_CGST_AMT,"
				+ "0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_OUTWARD_DOC_HEADER WHERE IS_PROCESSED = TRUE "
				+ "AND IS_DELETE = FALSE AND AN_RETURN_TYPE IN ('ANX1A') "
				+ "AND AN_TABLE_SECTION IN ('3D1','3D2','3D3','3D4') "
				+ buildQuery
				+ "union all "
				+ "SELECT 'D3' AS TABLE,"
				+ "'a_suppliesNoLiability' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,"
				+ "0 AS ASP_CGST_AMT,0 AS ASP_SGST_AMT,0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASPUI_TAXABLE_VALUE,"
				+ "0 AS ASPUI_IGST_AMT,0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,"
				+ "0 AS ASPUI_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT "
				+ "WHERE IS_DELETE = FALSE AND RETURN_TYPE='RET-1A' "
				+ "AND RETURN_TABLE IN ('3D1','3D2','3D3','3D4')"
				+ buildQuery1
				+ " ) UNION ALL (SELECT AN_TABLE_SECTION AS TABLE,(case "
				+ "WHEN AN_TABLE_SECTION='3D1' THEN 'a_exemptNil' "
				+ "WHEN AN_TABLE_SECTION='3D2' THEN 'a_nonGst' "
				+ "WHEN AN_TABLE_SECTION='3D3' THEN 'a_rcOutward' "
				+ "WHEN AN_TABLE_SECTION='3D4' THEN 'a_sezData' "
				+ "END ) AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE IN ('RNV') THEN TAXABLE_VALUE END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE IN ('RDR') THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE IN ('RCR') THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,'0' AS ASP_IGST_AMT,'0' AS ASP_CGST_AMT,"
				+ "'0' AS ASP_SGST_AMT,'0' AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,0 AS ASPUI_CGST_AMT,"
				+ "0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_OUTWARD_DOC_HEADER "
				+ "WHERE IS_PROCESSED = TRUE AND IS_DELETE = FALSE "
				+ "AND AN_RETURN_TYPE IN ('RET1A') AND "
				+ "AN_TABLE_SECTION IN ('3D1','3D2','3D3','3D4') "
				+ buildQuery 
				+ "GROUP BY AN_TABLE_SECTION "
				+ "union all "
				+ "SELECT AN_TABLE_SECTION AS TABLE,(case "
				+ "WHEN AN_TABLE_SECTION='3D1' THEN 'a_exemptNil' "
				+ "WHEN AN_TABLE_SECTION='3D2' THEN 'a_nonGst' "
				+ "WHEN AN_TABLE_SECTION='3D3' THEN 'a_rcOutward' "
				+ "WHEN AN_TABLE_SECTION='3D4' THEN 'a_sezData' "
				+ "END ) AS TYPE_OF_SUPPLY,0 AS ASP_TAXABLE_VALUE,"
				+ "0 AS ASP_IGST_AMT,0 AS ASP_CGST_AMT,0 AS ASP_SGST_AMT,"
				+ "0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE IN ('RNV') THEN TAXABLE_VALUE END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE IN ('RDR') THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE IN ('RCR') THEN TAXABLE_VALUE END),0) "
				+ "AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_OUTWARD_DOC_HEADER "
				+ "WHERE IS_PROCESSED = TRUE AND IS_DELETE = FALSE "
				+ "AND AN_RETURN_TYPE IN ('RET1A') AND "
				+ "AN_TABLE_SECTION IN ('3D1','3D2','3D3','3D4') "
				+ buildQuery
				+ "GROUP BY AN_TABLE_SECTION "
				+ "union all "
				+ "SELECT RETURN_TABLE AS TABLE,"
				+ "(case  WHEN RETURN_TABLE='3D1' THEN 'a_exemptNil' "
				+ "WHEN RETURN_TABLE='3D2' THEN 'a_nonGst' "
				+ "WHEN RETURN_TABLE='3D3' THEN 'a_rcOutward' "
				+ "WHEN RETURN_TABLE='3D4' THEN 'a_sezData' END ) "
				+ "AS TYPE_OF_SUPPLY,0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,"
				+ "0 AS ASP_CGST_AMT,0 AS ASP_SGST_AMT,0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASPUI_TAXABLE_VALUE,"
				+ "0 AS ASPUI_IGST_AMT,0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,"
				+ "0 AS ASPUI_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT "
				+ "WHERE IS_DELETE = FALSE AND RETURN_TYPE='RET-1A' "
				+ "AND RETURN_TABLE IN ('3D1','3D2','3D3','3D4') "
				+ buildQuery1
				+ "GROUP BY RETURN_TABLE) "
				+ "UNION ALL "
				+ "SELECT 'E3' AS TABLE, 'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN CGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN CGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN SGST_AMT END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN SGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)+"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)-"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0) "
				+ "AS ASP_CESS_AMT,0 AS ASPUI_TAXABLE_VALUE,"
				+ "0 AS ASPUI_IGST_AMT,0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,"
				+ "0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_OUTWARD_DOC_HEADER WHERE IS_PROCESSED = TRUE "
				+ "AND IS_DELETE = FALSE AND AN_RETURN_TYPE IN ('ANX1A') "
				+ "AND AN_TABLE_SECTION IN ('3A','3C','3D') "
				+  buildQuery
				+ "UNION ALL "
				+ "SELECT 'E3' AS TABLE,'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_PROCESSED_B2C WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE IN ('ANX-1A') "
				+ buildQuery
				+ "UNION ALL "
				+ "SELECT 'E3' AS TABLE, 'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN CGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN CGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN SGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN SGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)+"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IFNULL(CESS_AMT_SPECIFIC,0)+"
				+ "IFNULL(CESS_AMT_ADVALOREM,0) END),0)-"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0) "
				+ "AS ASP_CESS_AMT,0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_INWARD_DOC_HEADER WHERE IS_PROCESSED = TRUE "
				+ "AND IS_DELETE = FALSE AND AN_RETURN_TYPE IN ('ANX1A') "
				+ "AND AN_TABLE_SECTION IN ('3H','3I') "
				+ buildQuery2
				+ "UNION ALL "
				+ "SELECT 'E3' AS TABLE,'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_PROCESSED_3H_3I WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE IN ('ANX-1A') "
				+ buildQuery2
				+ "UNION ALL "
				+ "SELECT 'E3' AS TABLE, 'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,0 AS ASP_CGST_AMT,"
				+ "0 AS ASP_SGST_AMT,0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASPUI_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASPUI_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASPUI_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASPUI_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASPUI_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE='RET-1A' AND RETURN_TABLE IN ('3A4','3C1') "
				+ buildQuery1 
				+ "UNION ALL "
				+ "(SELECT 'E3' AS TABLE,  'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,'0' AS ASP_IGST_AMT,"
				+ "'0' AS ASP_CGST_AMT,'0' AS ASP_SGST_AMT,'0' AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_OUTWARD_DOC_HEADER WHERE IS_PROCESSED = TRUE "
				+ "AND IS_DELETE = FALSE AND AN_RETURN_TYPE IN ('ANX1A') "
				+ "AND AN_TABLE_SECTION IN ('3D1','3D2','3D3','3D4') "
				+ buildQuery
				+ "union all "
				+ "SELECT 'E3' AS TABLE,'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,'0' AS ASP_IGST_AMT,"
				+ "'0' AS ASP_CGST_AMT,'0' AS ASP_SGST_AMT,'0' AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_OUTWARD_DOC_HEADER "
				+ "WHERE IS_PROCESSED = TRUE AND IS_DELETE = FALSE "
				+ "AND AN_RETURN_TYPE IN ('ANX1A') "
				+ "AND AN_TABLE_SECTION IN ('3D1','3D2','3D3','3D4') "
				+ buildQuery
				+ "union all "
				+ "SELECT 'E3' AS TABLE,'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,0 AS ASP_CGST_AMT,"
				+ "0 AS ASP_SGST_AMT,0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASPUI_TAXABLE_VALUE,"
				+ "0 AS ASPUI_IGST_AMT,0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,"
				+ "0 AS ASPUI_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE='RET-1A' "
				+ "AND RETURN_TABLE IN ('3D1','3D2','3D3','3D4')"
				+ buildQuery1
				+ " ) UNION ALL "
				+ "SELECT 'A4' AS TABLE,'a_itcNOtherClaims' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN TAXABLE_VALUE END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN TAXABLE_VALUE END),0) "
				+ "AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN IGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN IGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN CGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN CGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN SGST_AMT END),0) + "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN SGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0)+"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0)-"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0) "
				+ "AS ASP_CESS_AMT,0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_INWARD_DOC_HEADER "
				+ "WHERE IS_PROCESSED = TRUE AND IS_DELETE = FALSE AND "
				+ "AN_RETURN_TYPE IN ('ANX1A') AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') "
				+ buildQuery2 
				+ "UNION ALL "
				+ "SELECT 'A4' AS TABLE,'a_itcNOtherClaims' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASP_CESS_AMT,0 AS ASPUI_TAXABLE_VALUE,"
				+ "0 AS ASPUI_IGST_AMT,0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,"
				+ "0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_PROCESSED_3H_3I "
				+ "WHERE IS_DELETE = FALSE AND RETURN_TYPE IN ('ANX-1A') "
				+ buildQuery2 
				+ "UNION ALL "
				+ "SELECT 'A4' AS TABLE, 'a_itcNOtherClaims' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,0 AS ASP_CGST_AMT,"
				+ "0 AS ASP_SGST_AMT, 0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASPUI_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASPUI_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASPUI_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASPUI_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASPUI_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE='RET-1A' AND RETURN_TABLE IN ('4A5') "
				+ buildQuery1
				+ "UNION ALL "
				+ "SELECT 'B4' AS TABLE, 'a_creditReversal' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,0 AS ASP_CGST_AMT,"
				+ "0 AS ASP_SGST_AMT, 0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS ASPUI_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS ASPUI_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS ASPUI_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS ASPUI_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS ASPUI_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE='RET-1A' AND RETURN_TABLE IN ('4B1','4B2') "
				+ buildQuery1 
				+ "UNION ALL "
				+ "SELECT 'C4' AS TABLE,'a_itcAvailable' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN TAXABLE_VALUE END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN TAXABLE_VALUE END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN "
				+ "TAXABLE_VALUE END),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN IGST_AMT END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN IGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN CGST_AMT END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN CGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN SGST_AMT END),0) +  "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN SGST_AMT END),0)- "
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RNV' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0)+"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RDR' "
				+ "AND AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0)-"
				+ "IFNULL(SUM(CASE WHEN DOC_TYPE='RCR' AND "
				+ "AN_TABLE_SECTION IN ('3H','3I','3J','3K') THEN "
				+ "IFNULL(CESS_AMT_SPECIFIC,0)+IFNULL(CESS_AMT_ADVALOREM,0) END),0) "
				+ "AS ASP_CESS_AMT,0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT,"
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT "
				+ "FROM ANX_INWARD_DOC_HEADER "
				+ "WHERE IS_PROCESSED = TRUE AND IS_DELETE = FALSE  "
				+ "AND AN_TABLE_SECTION IN ('3H','3I','3J','3K') "
				+ "AND AN_RETURN_TYPE IN ('ANX1A') "
				+ buildQuery2 
				+ "UNION ALL "
				+ "SELECT 'C4' AS TABLE,'a_itcAvailable' AS TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,0 AS ASP_CGST_AMT,"
				+ "0 AS ASP_SGST_AMT,0 AS ASP_CESS_AMT,"
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE='4A5' THEN  TAXABLE_VALUE END),0) - "
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE IN ('4B1','4B2') "
				+ "THEN  TAXABLE_VALUE END),0) AS ASP_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE='4A5' THEN  IGST_AMT END),0) - "
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE IN ('4B1','4B2') THEN  IGST_AMT END),0) "
				+ "AS ASP_IGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE='4A5' THEN  CGST_AMT END),0) - "
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE IN ('4B1','4B2') THEN  CGST_AMT END),0) "
				+ "AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE='4A5' THEN  SGST_AMT END),0) - "
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE IN ('4B1','4B2') THEN  SGST_AMT END),0) "
				+ "AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE='4A5' THEN  CESS_AMT  END),0) - "
				+ "IFNULL(SUM(CASE WHEN RETURN_TABLE IN ('4B1','4B2') THEN  CESS_AMT  END),0) "
				+ "AS ASP_CESS_AMT "
				+ "FROM RET_PROCESSED_USERINPUT WHERE IS_DELETE = FALSE "
				+ "AND RETURN_TYPE='RET-1A' AND RETURN_TABLE IN ('4A5','4B1','4B2')"
				+ buildQuery1
				+ ") "
				+ "UNION ALL SELECT TABLE,TYPE_OF_SUPPLY,"
				+ "0 AS ASP_TAXABLE_VALUE,0 AS ASP_IGST_AMT,"
				+ "0 AS ASP_CGST_AMT,0 AS ASP_SGST_AMT,0 AS ASP_CESS_AMT,"
				+ "0 AS ASPUI_TAXABLE_VALUE,0 AS ASPUI_IGST_AMT, "
				+ "0 AS ASPUI_CGST_AMT,0 AS ASPUI_SGST_AMT,0 AS ASPUI_CESS_AMT,"
				+ "GSTN_TAXABLE_VALUE,GSTN_IGST_AMT, GSTN_CGST_AMT,"
				+ "GSTN_SGST_AMT, GSTN_CESS_AMT FROM ( "
				+ "SELECT 'A3' AS TABLE,'a_outwardsupplies' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT, "
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_OUTWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND "
				+ "GET_TABLE_SECTION IN ('3A','3C','3D','3A4') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT 'B3' AS TABLE,"
				+ "'a_inwardSupplies' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_INWARD WHERE GET_RETURN_TYPE='RET-1A' " 
				+ "AND IS_DELETE = FALSE AND GET_TABLE_SECTION IN ('3H','3I') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT 'C3' AS GSTN_TABLE, "
				+ "'a_drCrNotes' AS GSTN_TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_OUTWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND GET_TABLE_SECTION IN ('3C1') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT 'D3' AS TABLE, 'a_suppliesNoLiability' AS TYPE_OF_SUPPLY, "
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "'0' AS GSTN_IGST_AMT,'0' AS GSTN_CGST_AMT,'0' AS GSTN_SGST_AMT, "
				+ "'0' AS GSTN_CESS_AMT "
				+ "FROM GETRET1_OUTWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND "
				+ "GET_TABLE_SECTION IN ('3D1','3D2','3D3','3D4') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION  "
				+ "UNION ALL "
				+ "SELECT 'E3' AS TABLE, 'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_OUTWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE "
				+ "AND GET_TABLE_SECTION IN "
				+ "('3A','3C','3D','3A4','3C1','3D1','3D2','3D3','3D4') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION  "
				+ "UNION ALL "
				+ "SELECT 'E3' AS TABLE, "
				+ "'a_valueNLiability' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT, "
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_INWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND GET_TABLE_SECTION IN ('3H','3I') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT 'GET_TABLE_SECTION' AS TABLE,(case "
				+ "WHEN GET_TABLE_SECTION='3A' THEN 'a_b2c' "
				+ "WHEN GET_TABLE_SECTION='3C' THEN 'a_expwt' "
				+ "WHEN GET_TABLE_SECTION='3D' THEN 'a_expwot' "
				+ "WHEN GET_TABLE_SECTION='3A4' THEN 'a_priorPeriod' "
				+ "WHEN GET_TABLE_SECTION='3C1' THEN 'a_otherReductions' "
				+ "WHEN GET_TABLE_SECTION='3D1' THEN 'a_exemptNil' "
				+ "WHEN GET_TABLE_SECTION='3D2' THEN 'a_nonGst' "
				+ "WHEN GET_TABLE_SECTION='3D3' THEN 'a_rcOutward' "
				+ "WHEN GET_TABLE_SECTION='3D4' THEN 'a_sezData' "
				+ "END ) AS TYPE_OF_SUPPLY, "
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_OUTWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND "
				+ "GET_TABLE_SECTION IN "
				+ "('3A','3C','3D','3A4','3C1','3D1','3D2','3D3','3D4') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT 'GET_TABLE_SECTION' AS TABLE, (case "
				+ "WHEN GET_TABLE_SECTION='3H' THEN 'a_rcInward' "
				+ "WHEN GET_TABLE_SECTION='3I' THEN 'a_imps' END ) AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_INWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND GET_TABLE_SECTION IN ('3H','3I') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT 'A4' AS TABLE,'a_itcNOtherClaims' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_INWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND GET_TABLE_SECTION IN "
				+ "('3H','3I','3J','3K','4A5') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT 'B4' AS TABLE,'a_creditReversal' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_INWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND GET_TABLE_SECTION IN ('4B1','4B2') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION  "
				+ "UNION ALL "
				+ "SELECT 'C4' AS TABLE,'a_itcAvailable' AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN "
				+ "('3H','3I','3J','3K','4A5') THEN TAXABLE_VALUE END),0) -  "
				+ "IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN ('4B1','4B2') "
				+ "THEN TAXABLE_VALUE END),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN "
				+ "('3H','3I','3J','3K','4A5') THEN IGST_AMT END),0) -  "
				+ "IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN ('4B1','4B2') "
				+ "THEN IGST_AMT END),0) AS ASP_IGST_AMT, "
				+ "IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN "
				+ "('3H','3I','3J','3K','4A5') THEN CGST_AMT END),0) -  "
				+ "IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN ('4B1','4B2') "
				+ "THEN CGST_AMT END),0) AS ASP_CGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN ('3H','3I','3J','3K','4A5') "
				+ "THEN SGST_AMT END),0) -  IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN "
				+ "('4B1','4B2') THEN SGST_AMT END),0) AS ASP_SGST_AMT,"
				+ "IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN "
				+ "('3H','3I','3J','3K','4A5') THEN CESS_AMT END),0) -  "
				+ "IFNULL(SUM(CASE WHEN GET_TABLE_SECTION IN ('4B1','4B2') "
				+ "THEN CESS_AMT END),0) AS ASP_CESS_AMT "
				+ "FROM GETRET1_INWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND GET_TABLE_SECTION IN "
				+ "('3H','3I','3J','3K','4A5','4B1','4B2') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION "
				+ "UNION ALL "
				+ "SELECT 'GET_TABLE_SECTION' AS TABLE,(case "
				+ "WHEN GET_TABLE_SECTION='3H' THEN 'a_4rcInward' "
				+ "WHEN GET_TABLE_SECTION='3I' THEN 'a_4imps' "
				+ "WHEN GET_TABLE_SECTION='3J' THEN 'a_impg' "
				+ "WHEN GET_TABLE_SECTION='3K' THEN 'a_impgSez'  "
				+ "WHEN GET_TABLE_SECTION='4A5' THEN 'a_adjustments' "
				+ "WHEN GET_TABLE_SECTION='4B1' THEN 'acceptRejectDoc' "
				+ "WHEN GET_TABLE_SECTION='4B2' THEN 'ineligibleCredit' "
				+ "END ) AS TYPE_OF_SUPPLY,"
				+ "IFNULL(SUM(TAXABLE_VALUE),0) AS GSTN_TAXABLE_VALUE,"
				+ "IFNULL(SUM(IGST_AMT),0) AS GSTN_IGST_AMT,"
				+ "IFNULL(SUM(CGST_AMT),0) AS GSTN_CGST_AMT,"
				+ "IFNULL(SUM(SGST_AMT),0) AS GSTN_SGST_AMT,"
				+ "IFNULL(SUM(CESS_AMT),0) AS GSTN_CESS_AMT "
				+ "FROM GETRET1_OUTWARD WHERE GET_RETURN_TYPE='RET-1A' "
				+ "AND IS_DELETE = FALSE AND GET_TABLE_SECTION IN "
				+ "('3H','3I','3J','3K','ISD','4A5','4B1','4B2') "
				+ buildQuery1
				+ "GROUP BY GET_TABLE_SECTION )) GROUP BY TABLE,TYPE_OF_SUPPLY";
		LOGGER.debug("Outward 3A TO 4B Query Execution END ");
		return queryString;

	}

}
