/**
 * 
 */
package com.ey.advisory.app.inward.einvoice;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Component;

import com.ey.advisory.common.AppException;
import com.google.common.base.Strings;

import io.jsonwebtoken.lang.Collections;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.persistence.Query;
import lombok.extern.slf4j.Slf4j;

/**
 * @author vishal.verma
 *
 */

@Slf4j
@Component("InwardEinvoiceGstinLevelDaoImpl")
public class InwardEinvoiceGstinLevelDaoImpl
		implements InwardEinvoiceGstinLevelDao {

	@PersistenceContext(unitName = "clientDataUnit")
	private EntityManager entityManager;

	@Override
	public List<GstinLevelInnerDto> findGstinLevelData(
			InwardEinvoiceGstinLevelReqDto dto) {

		List<GstinLevelInnerDto> respDto = new ArrayList<>();

		try {
			String queryString = createQuery();
			List<String> irnSts = Collections.isEmpty(dto.getIrnStatus())
					? Arrays.asList("ACT", "CNL") : dto.getIrnStatus();

			Query q = entityManager.createNativeQuery(queryString);

			q.setParameter("gstin", dto.getGstin());
			q.setParameter("taxPeriod", dto.getTaxPeriod());
			q.setParameter("irnSts", irnSts);

			@SuppressWarnings("unchecked")
			List<Object[]> list = q.getResultList();

			respDto = list.stream().map(o -> convert(o))
					.collect(Collectors.toCollection(ArrayList::new));

		} catch (Exception ex) {
			String msg = String.format("Error Occured while executing "
					+ "InwardEinvoiceGstinLevelDaoImpl gstin level "
					+ "Screen query", ex);
			LOGGER.error(msg, ex);
			throw new AppException(msg, ex);
		}
		return respDto;

	}

	private String createQuery() {
		StringBuilder query = new StringBuilder();

		query.append("	SELECT DOC_TYPE,SUPPLY_TYPE, SUM(TOT_COUNT), "
				+ "       SUM(TAXABLE_VALUE),  SUM(IGST), "
				+ "       SUM(CGST), SUM(SGST), "
				+ "       SUM(CESS),  SUM(TOTAL_TAX), "
				+ "       SUM(TOT_INV_VAL) FROM ( "
				+ "		SELECT HDR.DOC_TYPE, LIST.SUPPLY_TYPE,  "
				+ "         TO_INT(COUNT( DISTINCT LIST.ID)) AS TOT_COUNT,  "
				+ "         SUM(HDR.TAXABLE_VALUE) AS  TAXABLE_VALUE,   "
				+ "         SUM(HDR.IGST) AS IGST,  "
				+ "         SUM(HDR.CGST) AS CGST,  "
				+ "         SUM(HDR.SGST) AS SGST,  "
				+ "         SUM(HDR.CESS) AS CESS,   "
				+ "         SUM(HDR.TOTAL_TAX) AS TOTAL_TAX,  "
				+ "         SUM(LIST.TOT_INV_AMT) AS TOT_INV_VAL  "
				+ "        FROM TBL_GETIRN_LIST LIST  "
				+ "        INNER JOIN ( SELECT DOC_TYPE,'B2B' AS SUPPLY_TYPE, IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_B2B_HEADER WHERE DOC_TYPE='INV' AND "
				+ "                 CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'SEZWP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_SEZWP_HEADER WHERE DOC_TYPE='INV'  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'SEZWOP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_SEZWOP_HEADER WHERE DOC_TYPE='INV'  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'DXP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_DEXP_HEADER WHERE DOC_TYPE='INV'  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'EXPWP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_EXPWP_HEADER WHERE DOC_TYPE='INV'  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'EXPWOP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_EXPWOP_HEADER WHERE DOC_TYPE='INV'  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "             )HDR ON LIST.SUPPLY_TYPE=HDR.SUPPLY_TYPE AND  LIST.BATCH_ID=HDR.BATCH_ID AND LIST.IRN=HDR.IRN  AND LIST.IRN_STATUS=HDR.IRN_STATUS  "
				+ "         WHERE  LIST.CUST_GSTIN=:gstin  "
				+ "         AND LIST.MONTH_YEAR=:taxPeriod "
				+ " AND LIST.IRN_STATUS IN (:irnSts) "
				+ " AND UPPER(LIST.GET_DETAIL_IRN_STATUS) = 'SUCCESS'  "
				+ " AND LIST.IS_DELETE = false "
				+ "       GROUP BY HDR.DOC_TYPE,LIST.SUPPLY_TYPE "
				+ "         UNION ALL   "
				+ "        SELECT HDR.DOC_TYPE,LIST.SUPPLY_TYPE,  "
				+ "         TO_INT(COUNT( DISTINCT LIST.ID)) AS TOT_COUNT,  "
				+ "         SUM(HDR.TAXABLE_VALUE),   "
				+ "         SUM(HDR.IGST),           SUM(HDR.CGST),  "
				+ "         SUM(HDR.SGST),           SUM(HDR.CESS),   "
				+ "         SUM(HDR.TOTAL_TAX),  "
				+ "         SUM(LIST.TOT_INV_AMT) AS TOT_INV_VAL  "
				+ "        FROM TBL_GETIRN_LIST LIST  "
				+ "        INNER JOIN ( SELECT DOC_TYPE,'B2B' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_B2B_HEADER WHERE DOC_TYPE IN ('CR', 'CRN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'SEZWP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_SEZWP_HEADER WHERE DOC_TYPE IN ('CR', 'CRN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'SEZWOP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_SEZWOP_HEADER WHERE DOC_TYPE IN ('CR', 'CRN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'DXP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_DEXP_HEADER WHERE DOC_TYPE IN ('CR', 'CRN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'EXPWP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_EXPWP_HEADER WHERE DOC_TYPE IN ('CR', 'CRN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'EXPWOP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_EXPWOP_HEADER WHERE DOC_TYPE IN ('CR', 'CRN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "             )HDR ON LIST.SUPPLY_TYPE=HDR.SUPPLY_TYPE AND  LIST.BATCH_ID=HDR.BATCH_ID AND LIST.IRN=HDR.IRN  AND LIST.IRN_STATUS=HDR.IRN_STATUS  "
				+ "         WHERE  LIST.CUST_GSTIN=:gstin  "
				+ "         AND LIST.MONTH_YEAR=:taxPeriod "
				+ " AND LIST.IRN_STATUS IN (:irnSts) "
				+ " AND UPPER(LIST.GET_DETAIL_IRN_STATUS) = 'SUCCESS'  "
				+ " AND LIST.IS_DELETE = false "
				+ "       GROUP BY HDR.DOC_TYPE,LIST.SUPPLY_TYPE "
				+ "           UNION ALL  "
				+ "        SELECT HDR.DOC_TYPE,LIST.SUPPLY_TYPE,  "
				+ "         TO_INT(COUNT( DISTINCT LIST.ID)) AS TOT_COUNT,  "
				+ "         SUM(HDR.TAXABLE_VALUE),   "
				+ "         SUM(HDR.IGST),           SUM(HDR.CGST),  "
				+ "         SUM(HDR.SGST),           SUM(HDR.CESS),   "
				+ "         SUM(HDR.TOTAL_TAX),  "
				+ "         SUM(LIST.TOT_INV_AMT) AS TOT_INV_VAL  "
				+ "        FROM TBL_GETIRN_LIST LIST  "
				+ "        INNER JOIN ( SELECT DOC_TYPE,'B2B' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_B2B_HEADER WHERE DOC_TYPE IN ('DR', 'DBN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'SEZWP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_SEZWP_HEADER WHERE DOC_TYPE IN ('DR', 'DBN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'SEZWOP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_SEZWOP_HEADER WHERE DOC_TYPE IN ('DR', 'DBN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'DXP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_DEXP_HEADER WHERE DOC_TYPE IN ('DR', 'DBN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'EXPWP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_EXPWP_HEADER WHERE DOC_TYPE IN ('DR', 'DBN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "               UNION ALL   "
				+ "               SELECT DOC_TYPE,'EXPWOP' AS SUPPLY_TYPE,IFNULL(INV_ASSESSABLE_AMT,0) AS TAXABLE_VALUE,IFNULL(INV_IGST_AMT,0) AS IGST,IFNULL(INV_CGST_AMT,0) AS CGST,IFNULL(INV_CGST_AMT,0) AS SGST,(IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS CESS,(IFNULL(INV_IGST_AMT,0)+IFNULL(INV_CGST_AMT,0)+IFNULL(INV_SGST_AMT,0)+IFNULL(INV_CESS_ADVALOREM_AMT,0)+IFNULL(INV_CESS_SPECIFIC_AMT,0)+IFNULL(INV_STATECESS_ADVALOREM_AMT,0)+IFNULL(INV_STATECESS_SPECIFIC_AMT,0)) AS TOTAL_TAX,BATCH_ID,IRN,IRN_STATUS  "
				+ "               FROM TBL_GETIRN_EXPWOP_HEADER WHERE DOC_TYPE IN ('DR', 'DBN')  "
				+ "                AND CUSTOMER_GSTIN =:gstin "
				+ "             )HDR ON LIST.SUPPLY_TYPE=HDR.SUPPLY_TYPE AND  LIST.BATCH_ID=HDR.BATCH_ID AND LIST.IRN=HDR.IRN  AND LIST.IRN_STATUS=HDR.IRN_STATUS  "
				+ "         WHERE  LIST.CUST_GSTIN=:gstin  "
				+ "            AND LIST.MONTH_YEAR=:taxPeriod "
				+ " AND LIST.IRN_STATUS IN (:irnSts) "
				+ " AND UPPER(LIST.GET_DETAIL_IRN_STATUS) = 'SUCCESS'  "
				+ " AND LIST.IS_DELETE = false "
				+ "             GROUP BY HDR.DOC_TYPE,LIST.SUPPLY_TYPE "
				+ ") GROUP BY DOC_TYPE,SUPPLY_TYPE");

		return query.toString();
	}

	private GstinLevelInnerDto convert(Object[] arr) {

		if (LOGGER.isDebugEnabled()) {
			String str = "InwardEinvoiceGstinLevelDaoImpl : "
					+ " Converting generic object to"
					+ " InwardEinvoiceGstinLevelDaoImpl object";
			LOGGER.debug(str);
		}

		GstinLevelInnerDto dto = new GstinLevelInnerDto();

		dto.setDocType(arr[0] != null ? arr[0].toString() : null);

		String docType = (arr[0] != null) ? arr[0].toString() : null;

		dto.setSupplyType(arr[1] != null ? arr[1].toString() : null);
		dto.setCount(arr[2] != null ? (Integer) arr[2] : null);
		dto.setTaxableVal(arr[3] != null
				? new BigDecimal(
						CheckForNegativeValue(arr[3], docType).toString())
				: null);
		dto.setIgst(arr[4] != null
				? new BigDecimal(
						CheckForNegativeValue(arr[4], docType).toString())
				: null);
		dto.setCgst(arr[5] != null
				? new BigDecimal(
						CheckForNegativeValue(arr[5], docType).toString())
				: null);
		dto.setSgst(arr[6] != null
				? new BigDecimal(
						CheckForNegativeValue(arr[6], docType).toString())
				: null);
		dto.setCess(arr[7] != null
				? new BigDecimal(
						CheckForNegativeValue(arr[7], docType).toString())
				: null);
		dto.setTotalTax(arr[8] != null
				? new BigDecimal(
						CheckForNegativeValue(arr[8], docType).toString())
				: null);
		dto.setTotInvVal(arr[9] != null
				? new BigDecimal(
						CheckForNegativeValue(arr[9], docType).toString())
				: null);

		return dto;
	}

	private String CheckForNegativeValue(Object value, String docType) {

		if (value != null && !Strings.isNullOrEmpty(docType)) {
			if ("CR".equalsIgnoreCase(docType)) {
				if (value instanceof BigDecimal) {
					return (value != null ? ((((BigDecimal) value)
							.compareTo(BigDecimal.ZERO) > 0)
									? "-" + value.toString() : value.toString())
							: null);
				} else if (value instanceof Integer) {
					return (value != null ? (((Integer) value > 0)
							? "-" + value.toString() : value.toString())
							: null);
				} else if (value instanceof Long) {
					return (value != null ? (((Long) value > 0)
							? "-" + value.toString() : value.toString())
							: null);
				} else if (value instanceof BigInteger) {
					return (value != null ? ((((BigInteger) value)
							.compareTo(BigInteger.ZERO) > 0)
									? "-" + value.toString() : value.toString())
							: null);
				} else {
					if (!value.toString().isEmpty()) {
						return "-" + value.toString().replaceFirst("-", "");
					} else {
						return null;
					}
				}
			} else
				return value.toString();
		}
		return null;
	}
}
